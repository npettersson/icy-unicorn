/*
 * This file is generated by jOOQ.
 */
package se.npet.trafiklab.buslines.adapters.outbound.db.jooq.tables;


import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import se.npet.trafiklab.buslines.adapters.outbound.db.jooq.DefaultSchema;
import se.npet.trafiklab.buslines.adapters.outbound.db.jooq.Keys;
import se.npet.trafiklab.buslines.adapters.outbound.db.jooq.tables.records.BusStopOnLineRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BusStopOnLine extends TableImpl<BusStopOnLineRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>BUS_STOP_ON_LINE</code>
     */
    public static final BusStopOnLine BUS_STOP_ON_LINE = new BusStopOnLine();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BusStopOnLineRecord> getRecordType() {
        return BusStopOnLineRecord.class;
    }

    /**
     * The column <code>BUS_STOP_ON_LINE.BUS_LINE_ID</code>.
     */
    public final TableField<BusStopOnLineRecord, Integer> BUS_LINE_ID = createField(DSL.name("BUS_LINE_ID"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>BUS_STOP_ON_LINE.BUS_STOP_ID</code>.
     */
    public final TableField<BusStopOnLineRecord, Integer> BUS_STOP_ID = createField(DSL.name("BUS_STOP_ID"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>BUS_STOP_ON_LINE.DIRECTION</code>.
     */
    public final TableField<BusStopOnLineRecord, String> DIRECTION = createField(DSL.name("DIRECTION"), SQLDataType.CHAR(1).nullable(false), this, "");

    /**
     * The column <code>BUS_STOP_ON_LINE.STOP_ORDER</code>.
     */
    public final TableField<BusStopOnLineRecord, Integer> STOP_ORDER = createField(DSL.name("STOP_ORDER"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>BUS_STOP_ON_LINE.EXISTS_FROM</code>.
     */
    public final TableField<BusStopOnLineRecord, LocalDate> EXISTS_FROM = createField(DSL.name("EXISTS_FROM"), SQLDataType.LOCALDATE.nullable(false), this, "");

    private BusStopOnLine(Name alias, Table<BusStopOnLineRecord> aliased) {
        this(alias, aliased, null);
    }

    private BusStopOnLine(Name alias, Table<BusStopOnLineRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>BUS_STOP_ON_LINE</code> table reference
     */
    public BusStopOnLine(String alias) {
        this(DSL.name(alias), BUS_STOP_ON_LINE);
    }

    /**
     * Create an aliased <code>BUS_STOP_ON_LINE</code> table reference
     */
    public BusStopOnLine(Name alias) {
        this(alias, BUS_STOP_ON_LINE);
    }

    /**
     * Create a <code>BUS_STOP_ON_LINE</code> table reference
     */
    public BusStopOnLine() {
        this(DSL.name("BUS_STOP_ON_LINE"), null);
    }

    public <O extends Record> BusStopOnLine(Table<O> child, ForeignKey<O, BusStopOnLineRecord> key) {
        super(child, key, BUS_STOP_ON_LINE);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public UniqueKey<BusStopOnLineRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_3;
    }

    @Override
    public List<UniqueKey<BusStopOnLineRecord>> getKeys() {
        return Arrays.<UniqueKey<BusStopOnLineRecord>>asList(Keys.CONSTRAINT_3);
    }

    @Override
    public List<ForeignKey<BusStopOnLineRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<BusStopOnLineRecord, ?>>asList(Keys.CONSTRAINT_36, Keys.CONSTRAINT_36C);
    }

    private transient BusLine _busLine;
    private transient BusStop _busStop;

    public BusLine busLine() {
        if (_busLine == null)
            _busLine = new BusLine(this, Keys.CONSTRAINT_36);

        return _busLine;
    }

    public BusStop busStop() {
        if (_busStop == null)
            _busStop = new BusStop(this, Keys.CONSTRAINT_36C);

        return _busStop;
    }

    @Override
    public BusStopOnLine as(String alias) {
        return new BusStopOnLine(DSL.name(alias), this);
    }

    @Override
    public BusStopOnLine as(Name alias) {
        return new BusStopOnLine(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BusStopOnLine rename(String name) {
        return new BusStopOnLine(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BusStopOnLine rename(Name name) {
        return new BusStopOnLine(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Integer, String, Integer, LocalDate> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
