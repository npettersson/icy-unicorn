/*
 * This file is generated by jOOQ.
 */
package se.npet.trafiklab.buslines.adapters.outbound.db.jooq.tables.daos;


import java.time.LocalDate;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import se.npet.trafiklab.buslines.adapters.outbound.db.jooq.tables.BusStop;
import se.npet.trafiklab.buslines.adapters.outbound.db.jooq.tables.pojos.BusStopEntity;
import se.npet.trafiklab.buslines.adapters.outbound.db.jooq.tables.records.BusStopRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BusStopDao extends DAOImpl<BusStopRecord, BusStopEntity, Integer> {

    /**
     * Create a new BusStopDao without any configuration
     */
    public BusStopDao() {
        super(BusStop.BUS_STOP, BusStopEntity.class);
    }

    /**
     * Create a new BusStopDao with an attached configuration
     */
    public BusStopDao(Configuration configuration) {
        super(BusStop.BUS_STOP, BusStopEntity.class, configuration);
    }

    @Override
    public Integer getId(BusStopEntity object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<BusStopEntity> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(BusStop.BUS_STOP.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ID IN (values)</code>
     */
    public List<BusStopEntity> fetchById(Integer... values) {
        return fetch(BusStop.BUS_STOP.ID, values);
    }

    /**
     * Fetch a unique record that has <code>ID = value</code>
     */
    public BusStopEntity fetchOneById(Integer value) {
        return fetchOne(BusStop.BUS_STOP.ID, value);
    }

    /**
     * Fetch records that have <code>STOP_AREA_ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<BusStopEntity> fetchRangeOfStopAreaId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(BusStop.BUS_STOP.STOP_AREA_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>STOP_AREA_ID IN (values)</code>
     */
    public List<BusStopEntity> fetchByStopAreaId(Integer... values) {
        return fetch(BusStop.BUS_STOP.STOP_AREA_ID, values);
    }

    /**
     * Fetch records that have <code>NAME BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<BusStopEntity> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(BusStop.BUS_STOP.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code>
     */
    public List<BusStopEntity> fetchByName(String... values) {
        return fetch(BusStop.BUS_STOP.NAME, values);
    }

    /**
     * Fetch records that have <code>NORTH_COORD BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<BusStopEntity> fetchRangeOfNorthCoord(String lowerInclusive, String upperInclusive) {
        return fetchRange(BusStop.BUS_STOP.NORTH_COORD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>NORTH_COORD IN (values)</code>
     */
    public List<BusStopEntity> fetchByNorthCoord(String... values) {
        return fetch(BusStop.BUS_STOP.NORTH_COORD, values);
    }

    /**
     * Fetch records that have <code>EAST_COORD BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<BusStopEntity> fetchRangeOfEastCoord(String lowerInclusive, String upperInclusive) {
        return fetchRange(BusStop.BUS_STOP.EAST_COORD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>EAST_COORD IN (values)</code>
     */
    public List<BusStopEntity> fetchByEastCoord(String... values) {
        return fetch(BusStop.BUS_STOP.EAST_COORD, values);
    }

    /**
     * Fetch records that have <code>ZONE BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<BusStopEntity> fetchRangeOfZone(String lowerInclusive, String upperInclusive) {
        return fetchRange(BusStop.BUS_STOP.ZONE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ZONE IN (values)</code>
     */
    public List<BusStopEntity> fetchByZone(String... values) {
        return fetch(BusStop.BUS_STOP.ZONE, values);
    }

    /**
     * Fetch records that have <code>EXISTS_FROM BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<BusStopEntity> fetchRangeOfExistsFrom(LocalDate lowerInclusive, LocalDate upperInclusive) {
        return fetchRange(BusStop.BUS_STOP.EXISTS_FROM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>EXISTS_FROM IN (values)</code>
     */
    public List<BusStopEntity> fetchByExistsFrom(LocalDate... values) {
        return fetch(BusStop.BUS_STOP.EXISTS_FROM, values);
    }
}
