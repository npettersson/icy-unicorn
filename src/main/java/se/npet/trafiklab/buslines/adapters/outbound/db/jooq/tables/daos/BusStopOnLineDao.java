/*
 * This file is generated by jOOQ.
 */
package se.npet.trafiklab.buslines.adapters.outbound.db.jooq.tables.daos;


import java.time.LocalDate;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.Record3;
import org.jooq.impl.DAOImpl;

import se.npet.trafiklab.buslines.adapters.outbound.db.jooq.tables.BusStopOnLine;
import se.npet.trafiklab.buslines.adapters.outbound.db.jooq.tables.pojos.BusStopOnLineEntity;
import se.npet.trafiklab.buslines.adapters.outbound.db.jooq.tables.records.BusStopOnLineRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BusStopOnLineDao extends DAOImpl<BusStopOnLineRecord, BusStopOnLineEntity, Record3<Integer, Integer, String>> {

    /**
     * Create a new BusStopOnLineDao without any configuration
     */
    public BusStopOnLineDao() {
        super(BusStopOnLine.BUS_STOP_ON_LINE, BusStopOnLineEntity.class);
    }

    /**
     * Create a new BusStopOnLineDao with an attached configuration
     */
    public BusStopOnLineDao(Configuration configuration) {
        super(BusStopOnLine.BUS_STOP_ON_LINE, BusStopOnLineEntity.class, configuration);
    }

    @Override
    public Record3<Integer, Integer, String> getId(BusStopOnLineEntity object) {
        return compositeKeyRecord(object.getBusLineId(), object.getBusStopId(), object.getDirection());
    }

    /**
     * Fetch records that have <code>BUS_LINE_ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<BusStopOnLineEntity> fetchRangeOfBusLineId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(BusStopOnLine.BUS_STOP_ON_LINE.BUS_LINE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>BUS_LINE_ID IN (values)</code>
     */
    public List<BusStopOnLineEntity> fetchByBusLineId(Integer... values) {
        return fetch(BusStopOnLine.BUS_STOP_ON_LINE.BUS_LINE_ID, values);
    }

    /**
     * Fetch records that have <code>BUS_STOP_ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<BusStopOnLineEntity> fetchRangeOfBusStopId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(BusStopOnLine.BUS_STOP_ON_LINE.BUS_STOP_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>BUS_STOP_ID IN (values)</code>
     */
    public List<BusStopOnLineEntity> fetchByBusStopId(Integer... values) {
        return fetch(BusStopOnLine.BUS_STOP_ON_LINE.BUS_STOP_ID, values);
    }

    /**
     * Fetch records that have <code>DIRECTION BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<BusStopOnLineEntity> fetchRangeOfDirection(String lowerInclusive, String upperInclusive) {
        return fetchRange(BusStopOnLine.BUS_STOP_ON_LINE.DIRECTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>DIRECTION IN (values)</code>
     */
    public List<BusStopOnLineEntity> fetchByDirection(String... values) {
        return fetch(BusStopOnLine.BUS_STOP_ON_LINE.DIRECTION, values);
    }

    /**
     * Fetch records that have <code>STOP_ORDER BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<BusStopOnLineEntity> fetchRangeOfStopOrder(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(BusStopOnLine.BUS_STOP_ON_LINE.STOP_ORDER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>STOP_ORDER IN (values)</code>
     */
    public List<BusStopOnLineEntity> fetchByStopOrder(Integer... values) {
        return fetch(BusStopOnLine.BUS_STOP_ON_LINE.STOP_ORDER, values);
    }

    /**
     * Fetch records that have <code>EXISTS_FROM BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<BusStopOnLineEntity> fetchRangeOfExistsFrom(LocalDate lowerInclusive, LocalDate upperInclusive) {
        return fetchRange(BusStopOnLine.BUS_STOP_ON_LINE.EXISTS_FROM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>EXISTS_FROM IN (values)</code>
     */
    public List<BusStopOnLineEntity> fetchByExistsFrom(LocalDate... values) {
        return fetch(BusStopOnLine.BUS_STOP_ON_LINE.EXISTS_FROM, values);
    }
}
